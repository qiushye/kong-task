syntax = "v1"

info(
	title: "linting rule"
	desc: "Access Control API"
	author: "Xiayu Qiu"
	version: "v1"
)

type (
	CreateRuleReq {
		LintingRule
	}

	CreateRuleResp {
		Id string `json:"id"`
	}

	LintingRule {
		Name    string `json:"name"`
		Project string `json:"project"`
		Content string `json:"content"`
	}

	UpdateRuleReq {
		Id string `path:"id"`
		LintingRule
	}

	GetRuleReq {
		Name    string `form:"name,optional"`
		Project string `form:"project,optional"`
	}

	GetRuleResp {
		Id string `json:"id"`
		LintingRule
	}
)

@server(
	middleware: Auth
	group: rule
)
service kong-task-api {
	@doc "创建规则"
	@handler CreateRule
	post /v1/rule (CreateRuleReq) returns (CreateRuleResp)
	
	@doc "修改规则"
	@handler UpdateRule
	put /v1/rule/:id (UpdateRuleReq)
	
	@doc "获取规则"
	@handler GetRule
	get /v1/rule (GetRuleReq) returns  (GetRuleResp)
}

type (
	UseInfo {
		Uid          uint32 `json:"uid"`                       // 添加到project的用户id
		Name         string `json:"name"`                      // 添加到project的用户名
		Project      string `json:"project"`                   // 项目名
		Organization string `json:"organization,default=kong"` // 组织名，默认为kong
		IsAdmin      bool   `json:"isAdmin"`                   // 是否为管理员
		ActionType   uint   `json:"actionType"`                // 权限
	}

	UpdateUserReq {
		Uid          uint32 `path:"uid"`                       // 添加到project的用户id
		Project      string `json:"project"`                   // 项目名
		Organization string `json:"organization,default=kong"` // 组织名，默认为kong
		IsAdmin      bool   `json:"isAdmin"`                   // 是否为管理员
		ActionType   uint   `json:"actionType"`                // 权限
	}

	RemoveUserReq {
		Uid          uint32 `path:"uid"`                       // 添加到project的用户id
		Project      string `json:"project"`                   // 项目名
		Organization string `json:"organization,default=kong"` // 组织名，默认为kong
	}

	GetUsersReq {
		Project      string `form:"project"`                   // 项目名
		Organization string `form:"organization,default=kong"` // 组织名，默认为kong
	}

	GetUsersResp {
		Users []UseInfo `json:"users"`
	}
)

@server(
	middleware: Auth
	group: user
)
service kong-task-api {
	@doc "添加用户到项目中"
	@handler AddUser
	post /v1/user (UseInfo)
	
	@doc "更新用户在项目中的权限"
	@handler UpdateUser
	put /v1/user/:uid (UpdateUserReq)
	
	@doc "从项目中移除用户"
	@handler RemoveUser
	delete /v1/user/:uid (RemoveUserReq)
	
	@doc "获取项目的用户列表"
	@handler GetUsers
	get /v1/user (GetUsersReq) returns (GetUsersResp)
}